{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\write\\WriteContent2.vue?vue&type=style&index=0&id=48e3792e&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\write\\WriteContent2.vue","mtime":1636635958777},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI1dyaXRlQ29udGVudF9Db250YWluZXIgew0KICB3aWR0aDogNTMwcHg7DQogIGhlaWdodDogODU0cHg7DQp9DQojV3JpdGVDb250ZW50X1RlbXBsZXRlIHsNCiAgaGVpZ2h0OiA2ODRweDsNCiAgYm94LXNoYWRvdzogM3B4IDNweCAxMXB4IHJnYmEoMTY2LCAxNjYsIDE2OCwgMC4yNSk7DQp9DQojSGFzaFRhZ19JbnB1dCB7DQogIG1hcmdpbi10b3A6IDMwcHg7DQp9DQojV3JpdGVDb250ZW50X0J0biB7DQogIGhlaWdodDogMzhweDsNCiAgd2lkdGg6IDE1MnB4Ow0KICBtYXJnaW46IDAgYXV0bzsNCiAgbWFyZ2luLXRvcDogMzBweDsNCiAgYm94LXNoYWRvdzogbm9uZTsNCn0NCiNXcml0ZV9CdG4gew0KICBiYWNrZ3JvdW5kOiAjZmZiMzE5Ow0KICBjb2xvcjogd2hpdGU7DQogIGZvbnQtc2l6ZTogMTdweDsNCiAgd2lkdGg6IDcwcHg7DQogIGJveC1zaGFkb3c6IG5vbmU7DQp9DQojQmFja19CdG4gew0KICBiYWNrZ3JvdW5kOiAjOWY5ZjlmOw0KICBjb2xvcjogd2hpdGU7DQogIGZvbnQtc2l6ZTogMTdweDsNCiAgd2lkdGg6IDcwcHg7DQogIG1hcmdpbi1sZWZ0OiAxMnB4Ow0KICBib3gtc2hhZG93OiBub25lOw0KfQ0KDQp0ZXh0YXJlYSB7DQogIGxldHRlci1zcGFjaW5nOiAxcHg7DQp9DQoNCnRleHRhcmVhIHsNCiAgcGFkZGluZzogMTBweDsNCiAgbWF4LXdpZHRoOiAxMDAlOw0KICBsaW5lLWhlaWdodDogMS41Ow0KICBib3JkZXItcmFkaXVzOiA1cHg7DQogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOw0KfQ0K"},{"version":3,"sources":["WriteContent2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WriteContent2.vue","sourceRoot":"src/components/write","sourcesContent":["<template>\r\n  <div id=\"WriteContent_Container\">\r\n    <div id=\"WriteContent_Templete\">\r\n      <v-combobox\r\n        v-model=\"selectDiary\"\r\n        :items=\"diaryTitleList\"\r\n        label=\"일기장 선택\"\r\n      ></v-combobox>\r\n      <div id=\"in_title\">\r\n        <textarea name=\"title\" id=\"utitle\" rows=\"1.5\" cols=\"70\" placeholder=\"제목을 입력하세요\" maxlength=\"100\" v-model=\"note.noteTitle\" :style=\"{ 'font-family': getMyFont.fontUrl }\"></textarea>\r\n      </div>\r\n      <div id=\"in_content\">\r\n        <textarea name=\"content\" id=\"ucontent\" rows=\"19\" cols=\"70\" placeholder=\"내용을 입력하세요\" v-model=\"note.noteContent\" :style=\"{ 'font-family': getMyFont.fontUrl }\">\r\n        </textarea>\r\n      </div>\r\n      <v-file-input\r\n        v-model=\"note.noteMediaList\"\r\n        multiple\r\n        small-chips\r\n        truncate-length=\"15\"\r\n      ></v-file-input>\r\n    </div>\r\n    <div>\r\n      <div v-for=\"media in note.noteS3MediaList\" :key=\"media\">\r\n        <img :src=\"media\" style=\"width: 100px;\"/>\r\n      </div>\r\n    </div>\r\n    <div id=\"HashTag_Input\">\r\n      <v-text-field\r\n        v-model=\"note.noteHashtagList\"\r\n        label=\"#여기에 #해시태그를 #입력하세요\"\r\n        color=\"#FFB319\"\r\n      ></v-text-field>\r\n    </div>\r\n    <div id=\"WriteContent_Btn\">\r\n      <v-btn @click=\"write\" id=\"Write_Btn\">작성</v-btn>\r\n      <v-btn @click=\"back\" id=\"Back_Btn\"> 취소 </v-btn>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      diaryTitleList:[],\r\n      diaryList:[],\r\n      selectDiary:'',\r\n      myFont: '',\r\n      note: {\r\n        noteId: '',\r\n        diaryId: '',\r\n        fontId: '',\r\n        layoutId: 1,\r\n        designId: 1,\r\n        writerId: '',\r\n        noteTitle: '',\r\n        noteContent: '',\r\n        noteS3MediaList: [],\r\n        noteMediaList: [],\r\n        noteHashtagList: '',\r\n        stickerList: [{\r\n          leftPixel: '',\r\n          stickerId: '',\r\n          topPixel: '',\r\n        }],\r\n        emotionList: [{\r\n          writerId: '',\r\n          emotionInfoId: '',\r\n          noteId: '',\r\n        }]\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    loginUser() {\r\n      return this.$store.getters.getLoginUser;\r\n    },\r\n    // fontSetting () {\r\n    //   return this.$store.getters['getMyFont'];\r\n    // }\r\n    ...mapGetters(['getMyFont'])\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n    write() {\r\n      var selectDiaryId = -1 \r\n      for(let i=0;i<this.diaryList.length;i++){\r\n        if(this.selectDiary == this.diaryList[i].diaryTitle){\r\n          selectDiaryId = this.diaryList[i].id\r\n          break\r\n        }\r\n      }\r\n\r\n      console.log(this.getMyFont.id, '폰트아이디값')\r\n      const tmp = this.note.noteHashtagList.split(\"#\")\r\n      const noteHashtagList = []\r\n      for(let i=1;i<tmp.length;i++){\r\n        noteHashtagList[i-1] = tmp[i]\r\n      }\r\n\r\n      const formData = new FormData()\r\n      formData.append('designId', this.note.designId)\r\n      formData.append('diaryId', selectDiaryId)\r\n      // for(let i = 0; i < this.note.emotionList.length; i++){\r\n      //   formData.append('emotionList.writerId[]', this.note.emotionList[i].writerId)\r\n      //   formData.append('emotionList.emotionInfoId[]', this.note.emotionList[i].emotionInfoId)\r\n      //   formData.append('emotionList.noteId[]', this.note.emotionList[i].noteId)\r\n      // }\r\n      formData.append('fontId', this.getMyFont.id)\r\n      formData.append('layoutId', this.note.layoutId)\r\n      formData.append('noteContent', this.note.noteContent)\r\n      formData.append('noteHashtagList', noteHashtagList)\r\n      for(let i = 0; i < this.note.noteS3MediaList.length; i++){\r\n        formData.append('noteS3MediaList[]', this.note.noteS3MediaList[i])\r\n      }      \r\n      for(let i = 0; i < this.note.noteMediaList.length; i++){\r\n        formData.append('noteMediaList[]', this.note.noteMediaList[i])  \r\n      }\r\n      formData.append('noteTitle', this.note.noteTitle)      \r\n      for(let i = 0; i < this.note.stickerList.length; i++){\r\n        formData.append('stickerList.leftPixel[]', this.note.stickerList[i].leftPixel)\r\n        formData.append('stickerList.stickerId[]', this.note.stickerList[i].stickerId)\r\n        formData.append('stickerList.topPixel[]', this.note.stickerList[i].topPixel)\r\n      }      \r\n      formData.append('writerId', this.loginUser.userNickname)\r\n\r\n      if(this.$store.getters['getIsUpdate'] == false){\r\n        this.$store.dispatch(\"write\", formData).then(() => {\r\n          Swal.fire({\r\n              icon: \"success\",\r\n              title:\r\n                '<span style=\"font-size:25px;\">일기 작성 완료.</span>',\r\n              confirmButtonColor: \"#b0da9b\",\r\n              confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n            });\r\n          // console.log(res.data);\r\n          this.$store.commit('initNoteContent')\r\n          const loginUser = this.$store.getters['getLoginUser']\r\n          loginUser.userMileage += 10;\r\n          this.$store.commit('setLoginUser', loginUser);\r\n          this.$router.push('/main')\r\n        });\r\n      }\r\n      else if(this.$store.getters['getIsUpdate'] == true) {\r\n        const note = {\r\n          noteId: this.note.noteId,\r\n          formData : formData\r\n        }\r\n        this.$store.dispatch(\"modifyNote\", note).then(() => {\r\n          Swal.fire({\r\n              icon: \"success\",\r\n              title:\r\n                '<span style=\"font-size:25px;\">일기 수정 완료.</span>',\r\n              confirmButtonColor: \"#b0da9b\",\r\n              confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n            });\r\n          // console.log(res.data);\r\n          this.$store.commit('initNoteContent')\r\n          this.$router.push('/main')\r\n        });\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n      // 만약 수정하는 상태이면, state에 저장된 노트 컨텐츠들 가져오기\r\n      if(this.$store.getters['getIsUpdate'] == true) {\r\n        this.note = this.$store.getters['getNoteContent']\r\n        console.log(this.note)\r\n      }\r\n      this.$store.dispatch(\"diaryGet\").then((res) => {\r\n        const tmp = []\r\n        for(let i=0;i<res.data.length;i++) {\r\n          tmp[i] = res.data[i].diaryTitle\r\n        }\r\n        this.diaryTitleList = tmp\r\n        this.diaryList = res.data\r\n      });\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#WriteContent_Container {\r\n  width: 530px;\r\n  height: 854px;\r\n}\r\n#WriteContent_Templete {\r\n  height: 684px;\r\n  box-shadow: 3px 3px 11px rgba(166, 166, 168, 0.25);\r\n}\r\n#HashTag_Input {\r\n  margin-top: 30px;\r\n}\r\n#WriteContent_Btn {\r\n  height: 38px;\r\n  width: 152px;\r\n  margin: 0 auto;\r\n  margin-top: 30px;\r\n  box-shadow: none;\r\n}\r\n#Write_Btn {\r\n  background: #ffb319;\r\n  color: white;\r\n  font-size: 17px;\r\n  width: 70px;\r\n  box-shadow: none;\r\n}\r\n#Back_Btn {\r\n  background: #9f9f9f;\r\n  color: white;\r\n  font-size: 17px;\r\n  width: 70px;\r\n  margin-left: 12px;\r\n  box-shadow: none;\r\n}\r\n\r\ntextarea {\r\n  letter-spacing: 1px;\r\n}\r\n\r\ntextarea {\r\n  padding: 10px;\r\n  max-width: 100%;\r\n  line-height: 1.5;\r\n  border-radius: 5px;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n</style>"]}]}