{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\write\\WriteContent2.vue?vue&type=style&index=0&id=465c0c92&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\write\\WriteContent2.vue","mtime":1636956128631},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI3dyaXRlLXdyYXAgew0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDB2aDsNCiAgcGFkZGluZy10b3A6IDMlOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIC8vIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsNCn0NCiNwcmV2LXdyYXAgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHRvcDogMDsNCiAgbGVmdDogYXV0bzsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsNCiAgd2lkdGg6IDEwMCU7DQp9DQojV3JpdGVDb250ZW50X0NvbnRhaW5lciB7DQogIG1hcmdpbjogMCBhdXRvOw0KICB3aWR0aDogNTMwcHg7DQogIGhlaWdodDogODU0cHg7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQp9DQojV3JpdGVDb250ZW50X1RlbXBsZXRlIHsNCiAgcG9zaXRpb246cmVsYXRpdmU7DQogIGhlaWdodDogNjg0cHg7DQogIHBhZGRpbmc6IDIwcHg7DQogIGJveC1zaGFkb3c6IDNweCAzcHggMTFweCByZ2JhKDE2NiwgMTY2LCAxNjgsIDAuMjUpOw0KfQ0KLnNlbGVjdC1kaWFyeS1zZWN0aW9uIHsNCiAgLy8gYmFja2dyb3VuZC1jb2xvcjogYnVybHl3b29kOw0KICB3aWR0aDogNDAlOw0KICBtYXJnaW46IG5vbmU7DQogIHBhZGRpbmc6IG5vbmU7DQogIGRpdiB7DQogICAgLy8gYmFja2dyb3VuZC1jb2xvcjogcmVkOw0KICAgIHBhZGRpbmc6IG5vbmU7DQogICAgbWFyZ2luOiBub25lOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgfQ0KfQ0KLnYtaW5wdXRfX2NvbnRyb2wgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7DQogIHBhZGRpbmc6IG5vbmU7DQp9DQoudGl0bGUtc2VjdGlvbiB7DQogIC8vIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsNCiAgbWFyZ2luOiBub25lOw0KICBwYWRkaW5nOiBub25lOw0KfQ0KLmNvbnRlbnQtc2VjdGlvbiB7DQogIC8vIGJhY2tncm91bmQtY29sb3I6IGxlbW9uY2hpZmZvbjsNCiAgaGVpZ2h0OiAyMTBweDsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCn0NCi5maWxlLXNlY3Rpb24gew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICBtYXJnaW4tdG9wOiAzcHg7DQogIC8vIGhlaWdodDogMTAwJTsNCn0NCi5pbWctcHJldmlldyB7DQogIGJhY2tncm91bmQ6IGxpZ2h0c3RlZWxibHVlOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbi10b3A6IDEwcHg7DQogIG1hcmdpbi1yaWdodDogMTBweDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBvdmVyZmxvdzogaGlkZGVuOw0KICB6LWluZGV4OiAxMDsNCiAgd2lkdGg6IDgwcHg7DQogIGhlaWdodDogODBweDsNCg0KICBpbWcgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGhlaWdodDogYXV0bzsNCiAgfQ0KfQ0KLmltZy1zZWN0aW9uIHsNCiAgYmFja2dyb3VuZDogbGlnaHRwaW5rOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbi10b3A6IDEwcHg7DQogIG1hcmdpbi1yaWdodDogMTBweDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBvdmVyZmxvdzogaGlkZGVuOw0KICB3aWR0aDogODBweDsNCiAgaGVpZ2h0OiA4MHB4Ow0KDQogIGltZyB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgLy8gaGVpZ2h0OiAxMDAlOw0KICAgIC8vIGJhY2tncm91bmQ6IGdyZWVuOw0KICB9DQp9DQojSGFzaFRhZ19JbnB1dCB7DQogIG1hcmdpbi10b3A6IDMwcHg7DQogIC8vIGJhY2tncm91bmQtY29sb3I6ICNlZWU7DQp9DQojV3JpdGVDb250ZW50X0J0biB7DQogIGhlaWdodDogMzhweDsNCiAgd2lkdGg6IDE1MnB4Ow0KICBtYXJnaW46IDAgYXV0bzsNCiAgbWFyZ2luLXRvcDogMzBweDsNCiAgYm94LXNoYWRvdzogbm9uZTsNCn0NCiNXcml0ZV9CdG4gew0KICBiYWNrZ3JvdW5kOiAjZmZiMzE5Ow0KICBjb2xvcjogd2hpdGU7DQogIGZvbnQtc2l6ZTogMTdweDsNCiAgd2lkdGg6IDcwcHg7DQogIGJveC1zaGFkb3c6IG5vbmU7DQp9DQojQmFja19CdG4gew0KICBiYWNrZ3JvdW5kOiAjOWY5ZjlmOw0KICBjb2xvcjogd2hpdGU7DQogIGZvbnQtc2l6ZTogMTdweDsNCiAgd2lkdGg6IDcwcHg7DQogIG1hcmdpbi1sZWZ0OiAxMnB4Ow0KICBib3gtc2hhZG93OiBub25lOw0KfQ0KdGV4dGFyZWEgew0KICBsZXR0ZXItc3BhY2luZzogMXB4Ow0KfQ0KdGV4dGFyZWEgew0KICBwYWRkaW5nOiAxMHB4Ow0KICBtYXgtd2lkdGg6IDEwMCU7DQogIGxpbmUtaGVpZ2h0OiAxLjU7DQogIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7DQp9DQouc3RpY2tlcnsNCiAgYm9yZGVyOjNweCBzb2xpZCByZWQ7DQogIHdpZHRoOjMwMHB4Ow0KICBoZWlnaHQ6MzAwcHg7DQp9DQo="},{"version":3,"sources":["WriteContent2.vue"],"names":[],"mappingsiifile":"WriteContent2.vue","sourceRoot":"src/components/write","sourcesContent":["<template>\r\n  <div id=\"write-wrap\">\r\n    <div id=\"WriteContent_Container\">\r\n      <div id=\"WriteContent_Templete\">\r\n        <div class=\"select-diary-section\">\r\n          <v-select\r\n            v-model=\"selectDiary\"\r\n            :items=\"diaryTitleList\"\r\n            label=\"일기장 선택\"          \r\n            hide-details\r\n            height=\"25px\"\r\n            color=\"#FFB319\"\r\n          ></v-select>\r\n        </div>\r\n        <div class=\"title-section\">\r\n          <v-text-field\r\n            :style=\"{ 'font-family': getMyFont.fontUrl }\"          \r\n            v-model=\"note.noteTitle\"          \r\n            name=\"title\"\r\n            id=\"utitle\"\r\n            label=\"제목을 입력하세요\"\r\n            color=\"#979797\"\r\n            counter=\"20\"\r\n            maxlength=\"20\"\r\n            single-line\r\n            required\r\n          ></v-text-field>        \r\n        </div>          \r\n        <div class=\"content-section\">\r\n            <!-- class=\"target-font\" -->\r\n          <v-textarea\r\n            :style=\"{ 'font-family': getMyFont.fontUrl }\"\r\n            v-model=\"note.noteContent\"\r\n            name=\"content\"\r\n            id=\"ucontent\"\r\n            label=\"내용을 입력하세요\"\r\n            color=\"#979797\"\r\n            rows=\"6\"\r\n            counter=\"400\"\r\n            maxlength=\"400\"\r\n            single-line\r\n          ></v-textarea>\r\n        </div>\r\n        <div class=\"file-section\">\r\n          <label for=\"file\">\r\n            <span style=\"font-weight: 600; cursor: pointer;\">내 컴퓨터에서 업로드  ></span>\r\n          </label>\r\n          <!-- <v-file-input\r\n            v-model=\"note.noteMediaList\"\r\n            class=\"target-file\"\r\n            label=\"사진을 등록하세요 (최대 4장, 각 용량 2MB 이하)\"\r\n            color=\"#979797\"\r\n            counter\r\n            multiple\r\n            show-size\r\n            small-chips\r\n            truncate-length=\"11\"\r\n            prepend-icon=\"mdi-camera\"\r\n            @change=\"onImgUpload\"\r\n          >\r\n          </v-file-input> -->\r\n          <!-- <label for=\"file\"> -->\r\n            <!-- <span style=\"font-weight: 500;\">내 드라이브에서 업로드</span> -->\r\n          <!-- </label> -->\r\n          <!-- <v-file-input\r\n            v-model=\"note.noteMediaList\"\r\n            class=\"target-file\"\r\n            label=\"사진을 등록하세요 (최대 4장, 각 용량 2MB 이하)\"\r\n            color=\"#979797\"\r\n            counter\r\n            multiple\r\n            show-size\r\n            small-chips\r\n            truncate-length=\"11\"\r\n            prepend-icon=\"mdi-camera\"\r\n          >\r\n          </v-file-input> -->\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            ref=\"files\"\r\n            multiple\r\n            @change=\"onImgUpload\"\r\n            style=\"opacity: 0; cursor: pointer;\"\r\n          />\r\n          <div>\r\n            <div\r\n              v-for=\"(file, idx) in files\"\r\n              :key=\"idx\"\r\n              class=\"img-preview\"\r\n            >\r\n              <img :src=\"file.preview\" />\r\n            </div>\r\n          </div>\r\n          <div\r\n            class=\"img-section\"\r\n            v-for=\"(media, idx) in note.noteS3MediaList\"\r\n            :key=\"idx\"\r\n          >\r\n            <img :src=\"media\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"HashTag_Input\">\r\n        <v-text-field\r\n          v-model=\"note.noteHashtagList\"\r\n          label=\"#여기에 #해시태그를 #입력하세요\"\r\n          color=\"#FFB319\"\r\n        ></v-text-field>\r\n      </div>\r\n    </div>\r\n    <div id=\"prev-wrap\" v-show=\"onPreview\">\r\n      <PreviewContent\r\n        :onPreview=\"this.onPreview\"\r\n      />\r\n    </div>\r\n    <div v-if=\"!onPreview\" id=\"WriteContent_Btn\">\r\n      <v-btn @click=\"write\" id=\"Write_Btn\">다음</v-btn>\r\n      <v-btn @click=\"back\" id=\"Back_Btn\"> 취소 </v-btn>\r\n    </div>\r\n    <div v-else id=\"WriteContent_Btn\">\r\n      <v-btn @click=\"writeFin\" id=\"Write_Btn\">작성</v-btn>\r\n      <v-btn @click=\"back\" id=\"Back_Btn\">뒤로가기</v-btn>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\n// import { mapGetters } from 'vuex';\r\nimport EventBus from '../../eventBus'\r\nimport PreviewContent from \"../../components/write/PreviewContent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    PreviewContent,\r\n  },\r\n  data() {\r\n    return {\r\n      diaryTitleList: [],\r\n      diaryList: [],\r\n      selectDiary: \"\",\r\n      myFont: \"\",\r\n      files: [], //업로드용 파일\r\n      filesPreview: [],\r\n      uploadImageIndex: 0, // 이미지 업로드를 위한 변수\r\n      onPreview: false,\r\n      note: {\r\n        noteId: '',\r\n        diaryId: '',\r\n        fontId: 1,\r\n        layoutId: 1,\r\n        designId: 1,\r\n        writerId: \"\",\r\n        noteTitle: \"\",\r\n        noteContent: \"\",\r\n        noteS3MediaList: [],\r\n        noteMediaList: [],\r\n        noteHashtagList: '',\r\n        stickerList: [],\r\n        emotionList: [{\r\n          writerId: '',\r\n          emotionInfoId: '',\r\n          noteId: '',\r\n        }]\r\n      },\r\n      stickerNum: 1\r\n    }\r\n  },\r\n  computed: {\r\n    loginUser() {\r\n      return this.$store.getters.getLoginUser;\r\n    },\r\n    // fontSetting () {\r\n    //   return this.$store.getters['getMyFont'];\r\n    // }\r\n    // ...mapGetters([\"getMyFont\"]),\r\n    getMyFont() {\r\n      // v-text-field에 폰트 적용하기\r\n      const target = document.getElementsByClassName(\"v-text-field__slot\")\r\n      // 해시태그에 폰트적용 빼기위해서 -1함\r\n      for (let i = 0; i < target.length-1; i++) {\r\n        target[i].style.fontFamily = this.$store.getters.getMyFont.fontUrl;\r\n        console.log(target[i]);\r\n      }\r\n      return this.$store.getters[\"getMyFont\"];\r\n    },\r\n  },\r\n  methods: {    \r\n    // onImgUpload() {\r\n    //   // console.log(this.$refs.files.files);\r\n    //   const target = document.getElementsByClassName(\"target-file\")\r\n    //   console.log(target.files)\r\n    //   // this.files = [...this.files, this.$refs.files.files];\r\n    //   //하나의 배열로 넣기\r\n    //   let num = -1;\r\n    //   for (let i = 0; i < target.length; i++) {\r\n    //     this.files = [\r\n    //       ...this.files,\r\n    //       //이미지 업로드\r\n    //       {\r\n    //         //실제 파일\r\n    //         file: target.files[i],\r\n    //         //이미지 프리뷰\r\n    //         preview: URL.createObjectURL(target.files[i]),\r\n    //         //삭제및 관리를 위한 number\r\n    //         number: i,\r\n    //       },\r\n    //     ];\r\n    //     num = i;\r\n    //     //이미지 업로드용 프리뷰\r\n    //     // this.filesPreview = [\r\n    //     //   ...this.filesPreview,\r\n    //     //   { file: URL.createObjectURL(this.$refs.files.files[i]), number: i }\r\n    //     // ];\r\n    //   }\r\n    //   this.uploadImageIndex = num + 1; //이미지 index의 마지막 값 + 1 저장\r\n    //   console.log(this.files);\r\n    // },\r\n    onImgUpload(e) {\r\n      console.log(e.target.files)\r\n      console.log(this.$refs.files.files);\r\n      // this.files = [...this.files, this.$refs.files.files];\r\n      //하나의 배열로 넣기\r\n      let num = -1;\r\n      for (let i = 0; i < this.$refs.files.files.length; i++) {\r\n        this.files = [\r\n          ...this.files,\r\n          //이미지 업로드\r\n          {\r\n            //실제 파일\r\n            file: this.$refs.files.files[i],\r\n            //이미지 프리뷰\r\n            preview: URL.createObjectURL(this.$refs.files.files[i]),\r\n            //삭제및 관리를 위한 number\r\n            number: i,\r\n          },\r\n        ];\r\n        num = i;\r\n        //이미지 업로드용 프리뷰\r\n        // this.filesPreview = [\r\n        //   ...this.filesPreview,\r\n        //   { file: URL.createObjectURL(this.$refs.files.files[i]), number: i }\r\n        // ];\r\n      }\r\n      this.uploadImageIndex = num + 1; //이미지 index의 마지막 값 + 1 저장\r\n      console.log(this.files);\r\n    },\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n    write() {\r\n      var selectDiaryId = -1;\r\n      for (let i = 0; i < this.diaryList.length; i++) {\r\n        if (this.selectDiary == this.diaryList[i].diaryTitle) {\r\n          selectDiaryId = this.diaryList[i].id;\r\n          break;\r\n        }\r\n      }\r\n      for(let i=1;i<this.stickerNum;i++){\r\n        var temp = document.getElementById('sticker' + i) \r\n        var item = {\r\n          leftPixel: temp.style.left,\r\n          stickerId: temp.className,\r\n          topPixel: temp.style.top\r\n        }\r\n        this.note.stickerList.push(item)\r\n      }\r\n\r\n      const tmp = this.note.noteHashtagList.split(\"#\")\r\n      const noteHashtagList = []\r\n      for(let i=1;i<tmp.length;i++){\r\n        noteHashtagList[i-1] = tmp[i]\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"designId\", this.note.designId);\r\n      formData.append(\"diaryId\", selectDiaryId);\r\n      // for(let i = 0; i < this.note.emotionList.length; i++){\r\n      //   formData.append('emotionList.writerId[]', this.note.emotionList[i].writerId)\r\n      //   formData.append('emotionList.emotionInfoId[]', this.note.emotionList[i].emotionInfoId)\r\n      //   formData.append('emotionList.noteId[]', this.note.emotionList[i].noteId)\r\n      // }\r\n      formData.append(\"fontId\", this.getMyFont.id);\r\n      formData.append(\"layoutId\", this.note.layoutId);\r\n      formData.append(\"noteContent\", this.note.noteContent);\r\n      formData.append(\"noteHashtagList\", noteHashtagList);\r\n      for (let i = 0; i < this.note.noteS3MediaList.length; i++) {\r\n        formData.append(\"noteS3MediaList[]\", this.note.noteS3MediaList[i]);\r\n      }\r\n      for (let i = 0; i < this.$refs.files.files.length; i++) {\r\n        formData.append(\"noteMediaList[]\", this.$refs.files.files[i]);\r\n      }\r\n      formData.append(\"noteTitle\", this.note.noteTitle);\r\n      for (let i = 0; i < this.note.stickerList.length; i++) {\r\n        formData.append(\r\n          \"stickerList.leftPixel[]\",\r\n          this.note.stickerList[i].leftPixel\r\n        );\r\n        formData.append(\r\n          \"stickerList.stickerId[]\",\r\n          this.note.stickerList[i].stickerId\r\n        );\r\n        formData.append(\r\n          \"stickerList.topPixel[]\",\r\n          this.note.stickerList[i].topPixel\r\n        );\r\n      }\r\n      formData.append('noteTitle', this.note.noteTitle)      \r\n      for(let i = 0; i < this.note.stickerList.length; i++){\r\n        formData.append('stickerList[' + i + '].leftPixel', this.note.stickerList[i].leftPixel)\r\n        formData.append('stickerList[' + i + '].stickerId', this.note.stickerList[i].stickerId)\r\n        formData.append('stickerList[' + i + '].topPixel', this.note.stickerList[i].topPixel)\r\n      }      \r\n      formData.append('writerId', this.loginUser.userNickname)\r\n\r\n      console.log(formData)      \r\n      this.onPreview = true;\r\n\r\n      if(this.$store.getters['getIsUpdate'] == false){\r\n        this.$store.dispatch(\"write\", formData).then(() => {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: '<span style=\"font-size:25px;\">일기 작성 완료.</span>',\r\n            confirmButtonColor: \"#b0da9b\",\r\n            confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n          });\r\n          // console.log(res.data);\r\n          this.$store.commit(\"initNoteContent\");\r\n          const loginUser = this.$store.getters[\"getLoginUser\"];\r\n          loginUser.userMileage += 10;\r\n          this.$store.commit(\"setLoginUser\", loginUser);\r\n        });\r\n      } else if (this.$store.getters[\"getIsUpdate\"] == true) {\r\n        const note = {\r\n          noteId: this.note.noteId,\r\n          formData: formData,\r\n        };\r\n        this.$store.dispatch(\"modifyNote\", note).then(() => {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: '<span style=\"font-size:25px;\">일기 수정 완료.</span>',\r\n            confirmButtonColor: \"#b0da9b\",\r\n            confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n          });\r\n          // console.log(res.data);\r\n          this.$store.commit(\"initNoteContent\");\r\n        });\r\n      }\r\n    },\r\n    writeFin() {\r\n      var selectDiaryId = -1;\r\n      for (let i = 0; i < this.diaryList.length; i++) {\r\n        if (this.selectDiary == this.diaryList[i].diaryTitle) {\r\n          selectDiaryId = this.diaryList[i].id;\r\n          break;\r\n        }\r\n      }\r\n      for(let i=1;i<this.stickerNum;i++){\r\n        var temp = document.getElementById('sticker' + i) \r\n        var item = {\r\n          leftPixel: temp.style.left,\r\n          stickerId: temp.className,\r\n          topPixel: temp.style.top\r\n        }\r\n        this.note.stickerList.push(item)\r\n      }\r\n\r\n      const tmp = this.note.noteHashtagList.split(\"#\")\r\n      const noteHashtagList = []\r\n      for(let i=1;i<tmp.length;i++){\r\n        noteHashtagList[i-1] = tmp[i]\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"designId\", this.note.designId);\r\n      formData.append(\"diaryId\", selectDiaryId);\r\n      // for(let i = 0; i < this.note.emotionList.length; i++){\r\n      //   formData.append('emotionList.writerId[]', this.note.emotionList[i].writerId)\r\n      //   formData.append('emotionList.emotionInfoId[]', this.note.emotionList[i].emotionInfoId)\r\n      //   formData.append('emotionList.noteId[]', this.note.emotionList[i].noteId)\r\n      // }\r\n      formData.append(\"fontId\", this.getMyFont.id);\r\n      formData.append(\"layoutId\", this.note.layoutId);\r\n      formData.append(\"noteContent\", this.note.noteContent);\r\n      formData.append(\"noteHashtagList\", noteHashtagList);\r\n      for (let i = 0; i < this.note.noteS3MediaList.length; i++) {\r\n        formData.append(\"noteS3MediaList[]\", this.note.noteS3MediaList[i]);\r\n      }\r\n      for (let i = 0; i < this.$refs.files.files.length; i++) {\r\n        formData.append(\"noteMediaList[]\", this.$refs.files.files[i]);\r\n      }\r\n      formData.append(\"noteTitle\", this.note.noteTitle);\r\n      for (let i = 0; i < this.note.stickerList.length; i++) {\r\n        formData.append(\r\n          \"stickerList.leftPixel[]\",\r\n          this.note.stickerList[i].leftPixel\r\n        );\r\n        formData.append(\r\n          \"stickerList.stickerId[]\",\r\n          this.note.stickerList[i].stickerId\r\n        );\r\n        formData.append(\r\n          \"stickerList.topPixel[]\",\r\n          this.note.stickerList[i].topPixel\r\n        );\r\n      }\r\n      formData.append('noteTitle', this.note.noteTitle)      \r\n      for(let i = 0; i < this.note.stickerList.length; i++){\r\n        formData.append('stickerList[' + i + '].leftPixel', this.note.stickerList[i].leftPixel)\r\n        formData.append('stickerList[' + i + '].stickerId', this.note.stickerList[i].stickerId)\r\n        formData.append('stickerList[' + i + '].topPixel', this.note.stickerList[i].topPixel)\r\n      }      \r\n      formData.append('writerId', this.loginUser.userNickname)\r\n\r\n      console.log(formData)\r\n\r\n      if(this.$store.getters['getIsUpdate'] == false){\r\n        this.$store.dispatch(\"write\", formData).then(() => {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: '<span style=\"font-size:25px;\">일기 작성 완료.</span>',\r\n            confirmButtonColor: \"#b0da9b\",\r\n            confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n          });\r\n          // console.log(res.data);\r\n          this.$store.commit(\"initNoteContent\");\r\n          const loginUser = this.$store.getters[\"getLoginUser\"];\r\n          loginUser.userMileage += 10;\r\n          this.$store.commit(\"setLoginUser\", loginUser);\r\n          this.$router.push(\"/main\");\r\n        });\r\n      } else if (this.$store.getters[\"getIsUpdate\"] == true) {\r\n        const note = {\r\n          noteId: this.note.noteId,\r\n          formData: formData,\r\n        };\r\n        this.$store.dispatch(\"modifyNote\", note).then(() => {\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: '<span style=\"font-size:25px;\">일기 수정 완료.</span>',\r\n            confirmButtonColor: \"#b0da9b\",\r\n            confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n          });\r\n          // console.log(res.data);\r\n          this.$store.commit(\"initNoteContent\");\r\n          this.$router.push(\"/main\");\r\n        });\r\n      }\r\n    },\r\n    dragElement(elmnt) {\r\n          var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n          if (document.getElementById(elmnt.id)) {\r\n            /* if present, the header is where you move the DIV from:*/\r\n            document.getElementById(elmnt.id).onmousedown = dragMouseDown;\r\n          } else {\r\n            /* otherwise, move the DIV from anywhere inside the DIV:*/\r\n            elmnt.onmousedown = dragMouseDown;\r\n          }\r\n\r\n          function dragMouseDown(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // get the mouse cursor position at startup:\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            document.onmouseup = closeDragElement;\r\n            // call a function whenever the cursor moves:\r\n            document.onmousemove = elementDrag;\r\n          }\r\n\r\n          function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // calculate the new cursor position:\r\n            pos1 = pos3 - e.clientX;\r\n            pos2 = pos4 - e.clientY;\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            // set the element's new position:\r\n            elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n            elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n          }\r\n\r\n          function closeDragElement() {\r\n            /* stop moving when mouse button is released:*/\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n          }\r\n        }\r\n  },\r\n  created() {\r\n      // 만약 수정하는 상태이면, state에 저장된 노트 컨텐츠들 가져오기\r\n      if(this.$store.getters['getIsUpdate'] == true) {\r\n        this.note = this.$store.getters['getNoteContent']\r\n        console.log(this.note)\r\n      }\r\n      this.$store.dispatch(\"diaryGet\").then((res) => {\r\n        const tmp = []\r\n        for(let i=0;i<res.data.length;i++) {\r\n          tmp[i] = res.data[i].diaryTitle\r\n        }\r\n        this.diaryTitleList = tmp\r\n        this.diaryList = res.data\r\n      });\r\n\r\n      EventBus.$on('createSticker', (sticker) => {\r\n        const box = document.getElementById('WriteContent_Templete')\r\n\r\n        // const div = document.createElement('div')\r\n        const img = document.createElement('img')\r\n\r\n        img.id = 'sticker' + this.stickerNum\r\n        this.stickerNum++\r\n\r\n        // div.append(img)\r\n\r\n        img.src = sticker.stickerUrl\r\n\r\n        img.style.width = '50px'\r\n        img.style.height = '50px'\r\n        img.style.position = 'absolute'\r\n        img.style.top = '10px'\r\n        img.style.left = '10px'\r\n        img.style.cursor = 'pointer'\r\n        \r\n        img.className = sticker.id\r\n\r\n        box.append(img)\r\n\r\n        this.dragElement(img);\r\n      })\r\n    this.$store.dispatch(\"diaryGet\").then((res) => {\r\n      const tmp = [];\r\n      for (let i = 0; i < res.data.length; i++) {\r\n        tmp[i] = res.data[i].diaryTitle;\r\n      }\r\n      this.diaryTitleList = tmp;\r\n      this.diaryList = res.data;\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#write-wrap {\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding-top: 3%;\r\n  position: relative;\r\n  // background-color: lightblue;\r\n}\r\n#prev-wrap {\r\n  position: absolute;\r\n  top: 0;\r\n  left: auto;\r\n  background-color: #eee;\r\n  width: 100%;\r\n}\r\n#WriteContent_Container {\r\n  margin: 0 auto;\r\n  width: 530px;\r\n  height: 854px;\r\n  background-color: #fff;\r\n}\r\n#WriteContent_Templete {\r\n  position:relative;\r\n  height: 684px;\r\n  padding: 20px;\r\n  box-shadow: 3px 3px 11px rgba(166, 166, 168, 0.25);\r\n}\r\n.select-diary-section {\r\n  // background-color: burlywood;\r\n  width: 40%;\r\n  margin: none;\r\n  padding: none;\r\n  div {\r\n    // background-color: red;\r\n    padding: none;\r\n    margin: none;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.v-input__control {\r\n  background-color: red;\r\n  padding: none;\r\n}\r\n.title-section {\r\n  // background-color: lightblue;\r\n  margin: none;\r\n  padding: none;\r\n}\r\n.content-section {\r\n  // background-color: lemonchiffon;\r\n  height: 210px;\r\n  overflow: hidden;\r\n}\r\n.file-section {\r\n  background-color: #fff;\r\n  margin-top: 3px;\r\n  // height: 100%;\r\n}\r\n.img-preview {\r\n  background: lightsteelblue;\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  z-index: 10;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n}\r\n.img-section {\r\n  background: lightpink;\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  img {\r\n    width: 100%;\r\n    // height: 100%;\r\n    // background: green;\r\n  }\r\n}\r\n#HashTag_Input {\r\n  margin-top: 30px;\r\n  // background-color: #eee;\r\n}\r\n#WriteContent_Btn {\r\n  height: 38px;\r\n  width: 152px;\r\n  margin: 0 auto;\r\n  margin-top: 30px;\r\n  box-shadow: none;\r\n}\r\n#Write_Btn {\r\n  background: #ffb319;\r\n  color: white;\r\n  font-size: 17px;\r\n  width: 70px;\r\n  box-shadow: none;\r\n}\r\n#Back_Btn {\r\n  background: #9f9f9f;\r\n  color: white;\r\n  font-size: 17px;\r\n  width: 70px;\r\n  margin-left: 12px;\r\n  box-shadow: none;\r\n}\r\ntextarea {\r\n  letter-spacing: 1px;\r\n}\r\ntextarea {\r\n  padding: 10px;\r\n  max-width: 100%;\r\n  line-height: 1.5;\r\n  border-radius: 5px;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n.sticker{\r\n  border:3px solid red;\r\n  width:300px;\r\n  height:300px;\r\n}\r\n</style>"]}]}