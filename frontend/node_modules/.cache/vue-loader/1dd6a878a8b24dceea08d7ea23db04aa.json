{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\write\\WriteContent2.vue?vue&type=style&index=0&id=11556c74&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\write\\WriteContent2.vue","mtime":1637240382449},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI3dyaXRlLXdyYXAgew0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDB2aDsNCiAgcGFkZGluZy10b3A6IDglOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIC8vIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsNCn0NCiNwcmV2LXdyYXAgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHRvcDogMDsNCiAgbGVmdDogYXV0bzsNCiAgLy8gYmFja2dyb3VuZC1jb2xvcjogbGlnaHRwaW5rOw0KICB3aWR0aDogMTAwJTsNCn0NCiNXcml0ZUNvbnRlbnRfQ29udGFpbmVyIHsNCiAgbWFyZ2luOiAwIGF1dG87DQogIC8vIHdpZHRoOiA1MzBweDsNCiAgd2lkdGg6IDQ0M3B4Ow0KICAvLyBoZWlnaHQ6IDgwNHB4Ow0KICBoZWlnaHQ6IDYxMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KfQ0KI1dyaXRlQ29udGVudF9UZW1wbGV0ZSB7DQogIHBvc2l0aW9uOnJlbGF0aXZlOw0KICAvLyBoZWlnaHQ6IDY4NHB4Ow0KICBoZWlnaHQ6IDYxMHB4Ow0KICBwYWRkaW5nOiAxNHB4IDM2cHggMzBweCAzNnB4Ow0KICBib3gtc2hhZG93OiAzcHggM3B4IDExcHggcmdiYSgxNjYsIDE2NiwgMTY4LCAwLjI1KTsNCn0NCi5zZWxlY3QtZGlhcnktc2VjdGlvbiB7DQogIC8vIGJhY2tncm91bmQtY29sb3I6IGJ1cmx5d29vZDsNCiAgd2lkdGg6IDQwJTsNCiAgbWFyZ2luOiBub25lOw0KICBwYWRkaW5nOiBub25lOw0KICBkaXYgew0KICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHJlZDsNCiAgICBwYWRkaW5nOiBub25lOw0KICAgIG1hcmdpbjogbm9uZTsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogIH0NCn0NCi52LWlucHV0X19jb250cm9sIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOw0KICBwYWRkaW5nOiBub25lOw0KfQ0KLnRpdGxlLXNlY3Rpb24gew0KICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7DQogIG1hcmdpbjogbm9uZTsNCiAgcGFkZGluZzogbm9uZTsNCn0NCi5jb250ZW50LXNlY3Rpb24gew0KICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiBsZW1vbmNoaWZmb247DQogIGhlaWdodDogMTI1cHg7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9DQouZmlsZS11cC13cmFwIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KfQ0KI2ZpbGUtc2VjdGlvbiB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDMwMHB4Ow0KICBtYXJnaW4tdG9wOiA1cHg7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIHBvc2l0aW9uOnJlbGF0aXZlOw0KfQ0KLmZpbGUtaW5wdXQgew0KICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbnllbGxvdzsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB3aWR0aDogNXB4Ow0KICBoZWlnaHQ6IDVweDsNCiAgcmlnaHQ6IDA7DQogIHRvcDogMDsNCn0NCi5pbWctcHJldmlldyB7DQogIC8vIGJhY2tncm91bmQ6ICNlZWU7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgd2lkdGg6IDM3MXB4Ow0KICBoZWlnaHQ6MzAwcHg7DQogIG9iamVjdC1maXQ6IGNvdmVyOw0KDQogIGltZyB7DQogICAgaGVpZ2h0OjMwMHB4OyANCiAgICBvYmplY3QtZml0OiBjb3ZlcjsgICAgDQogIH0NCn0NCi5pbWctc2VjdGlvbiB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgbWFyZ2luLXRvcDogMTBweDsNCiAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIHdpZHRoOiA4MHB4Ow0KICBoZWlnaHQ6IDgwcHg7DQoNCiAgaW1nIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICAvLyBoZWlnaHQ6IDEwMCU7DQogIH0NCn0NCiNIYXNoVGFnX0lucHV0IHsNCiAgbWFyZ2luLXRvcDogMjBweDsNCiAgLy8gYmFja2dyb3VuZC1jb2xvcjogI2VlZTsNCn0NCiNXcml0ZUNvbnRlbnRfQnRuIHsNCiAgaGVpZ2h0OiAzOHB4Ow0KICB3aWR0aDogMTUycHg7DQogIG1hcmdpbjogMCBhdXRvOw0KICBtYXJnaW4tdG9wOiA5MHB4Ow0KICBib3gtc2hhZG93OiBub25lOyAgDQp9DQojV3JpdGVfQnRuIHsNCiAgYmFja2dyb3VuZDogI2ZmYjMxOTsNCiAgY29sb3I6IHdoaXRlOw0KICBmb250LXNpemU6IDE3cHg7DQogIHdpZHRoOiA3MHB4Ow0KICBib3gtc2hhZG93OiBub25lOw0KfQ0KI0JhY2tfQnRuIHsNCiAgYmFja2dyb3VuZDogIzlmOWY5ZjsNCiAgY29sb3I6IHdoaXRlOw0KICBmb250LXNpemU6IDE3cHg7DQogIHdpZHRoOiA3MHB4Ow0KICBtYXJnaW4tbGVmdDogMTJweDsNCiAgYm94LXNoYWRvdzogbm9uZTsNCn0NCnRleHRhcmVhIHsNCiAgbGV0dGVyLXNwYWNpbmc6IDFweDsNCn0NCnRleHRhcmVhIHsNCiAgcGFkZGluZzogMTBweDsNCiAgbWF4LXdpZHRoOiAxMDAlOw0KICBsaW5lLWhlaWdodDogMS41Ow0KICBib3JkZXItcmFkaXVzOiA1cHg7DQogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOw0KfQ0KLnN0aWNrZXJ7DQogIC8vIGJvcmRlcjozcHggc29saWQgcmVkOw0KICB3aWR0aDozMDBweDsNCiAgaGVpZ2h0OjMwMHB4Ow0KfQ0KI3RhcmdldERpYWxvZzo6LXdlYmtpdC1zY3JvbGxiYXIgew0KICBkaXNwbGF5OiBub25lOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEqLw0KfQ0K"},{"version":3,"sources":["WriteContent2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WriteContent2.vue","sourceRoot":"src/components/write","sourcesContent":["<template>\r\n  <div id=\"write-wrap\">\r\n    <div id=\"WriteContent_Container\">\r\n      <div id=\"WriteContent_Templete\">\r\n        <div class=\"select-diary-section\">\r\n          <v-select\r\n            v-model=\"selectDiary\"\r\n            :items=\"diaryTitleList\"\r\n            label=\"일기장 선택\"          \r\n            hide-details\r\n            height=\"25px\"\r\n            color=\"#FFB319\"\r\n          ></v-select>\r\n        </div>\r\n        <div class=\"title-section\">\r\n          <v-text-field\r\n            :style=\"{ 'font-family': getMyFont.fontUrl }\"          \r\n            v-model=\"note.noteTitle\"          \r\n            name=\"title\"\r\n            id=\"utitle\"\r\n            label=\"제목을 입력하세요\"\r\n            color=\"#979797\"\r\n            counter=\"26\"\r\n            maxlength=\"26\"            \r\n            single-line\r\n            required\r\n          ></v-text-field>        \r\n        </div>          \r\n        <div class=\"content-section\">\r\n          <v-textarea\r\n            :style=\"{ 'font-family': getMyFont.fontUrl }\"\r\n            v-model=\"note.noteContent\"\r\n            name=\"content\"\r\n            id=\"ucontent\"\r\n            label=\"내용을 입력하세요\"\r\n            color=\"#979797\"\r\n            rows=\"3\"\r\n            counter=\"400\"\r\n            maxlength=\"400\"\r\n            single-line\r\n          ></v-textarea>\r\n        </div>\r\n        <div class=\"file-up-wrap\">\r\n          <div>\r\n            <label for=\"file\">\r\n              <span style=\"font-weight: 600; cursor: pointer;\">내 컴퓨터에서 업로드  ></span>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <span style=\"font-weight: 600; cursor: pointer;\" @click=\"uploadS3Images\">내 클라우드에서 업로드  ></span>\r\n          </div>      \r\n        </div>      \r\n        <div class=\"file-input\">\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            ref=\"files\"\r\n            multiple\r\n            @change=\"onImgUpload\"\r\n            accept=\"image/*\"\r\n            style=\"opacity: 0; cursor: pointer; visibility: none; background: red\"\r\n          />\r\n        </div>\r\n          <!-- <v-file-input\r\n            v-model=\"note.noteMediaList\"\r\n            class=\"target-file\"\r\n            label=\"사진을 등록하세요 (최대 4장, 각 용량 2MB 이하)\"\r\n            color=\"#979797\"\r\n            counter\r\n            multiple\r\n            show-size\r\n            small-chips\r\n            truncate-length=\"11\"\r\n            prepend-icon=\"mdi-camera\"\r\n            @change=\"onImgUpload\"\r\n          > -->          \r\n        <div id=\"file-section\">\r\n          <div v-if=\"note.noteS3MediaList.length > 0\">\r\n            <img :src=\"note.noteS3MediaList[0]\" class=\"img-preview\">\r\n          </div>\r\n          <div v-else-if=\"files.length > 0\">\r\n            <img :src=\"files[0].preview\" class=\"img-preview\">\r\n          </div>\r\n          <p v-else style=\"color:#888; text-align: center; margin-top:36%;\">\r\n            사진 용량은 각 2MB까지 업로드 가능합니다.\r\n          </p>\r\n        </div>  \r\n      </div>\r\n    <div id=\"HashTag_Input\">\r\n      <v-text-field\r\n        hide-details\r\n        v-model=\"note.noteHashtagList\"\r\n        label=\"#여기에 #해시태그를 #입력하세요\"\r\n        color=\"#FFB319\"\r\n      ></v-text-field>\r\n    </div>\r\n    </div>\r\n    <div id=\"WriteContent_Btn\">\r\n      <v-btn @click=\"writeFin\" id=\"Write_Btn\">작성</v-btn>\r\n      <v-btn @click=\"back\" id=\"Back_Btn\">취소</v-btn>\r\n    </div>\r\n\r\n    <!-- 다이얼로그 --> \r\n    <v-dialog v-model=\"dialog\" max-width=\"920px\" id=\"targetDialog\">\r\n      <img \r\n        v-for=\"image in getS3result\" \r\n        :key=\"image\" \r\n        :src=\"image\" \r\n        @click=\"selectImage(image)\"\r\n        style=\"width: 300px; \"\r\n        />\r\n      <br>\r\n      <v-btn @click=\"dialog=false\">닫기</v-btn>\r\n    </v-dialog>\r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\nimport EventBus from '../../eventBus'\r\n// import { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialog: false,\r\n      diaryTitleList: [],\r\n      diaryList: [],\r\n      selectDiary: \"\",\r\n      myFont: \"\",\r\n      files: [], //업로드용 파일\r\n      filesPreview: [],\r\n      uploadImageIndex: 0, // 이미지 업로드를 위한 변수\r\n      onPreview: false,\r\n      getS3result: [],\r\n      note: {\r\n        noteId: '',\r\n        diaryId: '',\r\n        fontId: 1,\r\n        layoutId: 1,\r\n        designId: 1,\r\n        writerId: \"\",\r\n        noteTitle: \"\",\r\n        noteContent: \"\",\r\n        noteS3MediaList: [],\r\n        noteMediaList: [],\r\n        noteHashtagList: '',\r\n        stickerList: [],\r\n        emotionList: [{\r\n          writerId: '',\r\n          emotionInfoId: '',\r\n          noteId: '',\r\n        }]\r\n      },\r\n      stickerNum: 1\r\n    }\r\n  },\r\n  computed: {\r\n    loginUser() {\r\n      return this.$store.getters.getLoginUser;\r\n    },\r\n    currentDiary() {\r\n      return this.$store.getters.getCurrentDiary;\r\n    },\r\n    getMyFont() {\r\n      // v-text-field에 폰트 적용하기\r\n      const target = document.getElementsByClassName(\"v-text-field__slot\")\r\n      // 해시태그에 폰트적용 빼기위해서 -1함\r\n      for (let i = 0; i < target.length-1; i++) {\r\n        target[i].style.fontFamily = this.$store.getters.getMyFont.fontUrl;\r\n        console.log(target[i]);\r\n      }\r\n      return this.$store.getters[\"getMyFont\"];\r\n    },\r\n    // ...mapGetters(['getMyFont']),\r\n  },\r\n  methods: {\r\n    selectImage(image) {\r\n      this.note.noteS3MediaList.push(image);\r\n      this.dialog = false;\r\n    },\r\n    uploadS3Images() {\r\n      this.getS3result = []\r\n      this.$store.dispatch('getKakaoImageList').then((res) => {\r\n        for(let i = 0; i < res.data.length; i++){\r\n          this.getS3result.push(res.data[i])\r\n          this.dialog = true;\r\n        }\r\n      })\r\n    },\r\n    onImgUpload() {\r\n      //하나의 배열로 넣기\r\n      let num = -1;\r\n      for (let i = 0; i < this.$refs.files.files.length; i++) {\r\n        this.files = [\r\n          ...this.files,\r\n          //이미지 업로드\r\n          {\r\n            //실제 파일\r\n            file: this.$refs.files.files[i],\r\n            //이미지 프리뷰\r\n            preview: URL.createObjectURL(this.$refs.files.files[i]),\r\n            //삭제및 관리를 위한 number\r\n            number: i,\r\n          },\r\n        ];\r\n        num = i;\r\n      }\r\n      this.uploadImageIndex = num + 1; //이미지 index의 마지막 값 + 1 저장\r\n    },\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n    writeFin() {\r\n      var selectDiaryId = -1;\r\n      for (let i = 0; i < this.diaryList.length; i++) {\r\n        if (this.selectDiary == this.diaryList[i].diaryTitle) {\r\n          selectDiaryId = this.diaryList[i].id;\r\n          break;\r\n        }\r\n      }\r\n      outer: for(let i=1; i < this.stickerNum; i++){\r\n        var temp = document.getElementById('sticker' + i)\r\n        var item = {\r\n          leftPixel: temp.style.left,\r\n          stickerId: temp.className,\r\n          topPixel: temp.style.top\r\n        }\r\n        for(let j = 0; j < this.note.stickerList.length; j++){\r\n          if(this.note.stickerList[j].stickerId == item.stickerId) {\r\n            this.note.stickerList[j] = item;\r\n            continue outer;\r\n          }\r\n        }\r\n        this.note.stickerList.push(item)\r\n      }\r\n\r\n      const tmp = this.note.noteHashtagList.split(\"#\")\r\n      const noteHashtagList = []\r\n      for(let i=1;i<tmp.length;i++){\r\n        noteHashtagList[i-1] = tmp[i]\r\n      }\r\n\r\n      console.log('노트', this.note.stickerList)\r\n      // 리퀘스트 객체 작성\r\n      \r\n      const formData = new FormData();\r\n      formData.append(\"designId\", this.note.designId);  // 디자인 ID\r\n      formData.append(\"diaryId\", selectDiaryId);  // 다이어리 ID\r\n      formData.append(\"fontId\", this.getMyFont.id); // 폰트 ID\r\n      formData.append(\"layoutId\", this.note.layoutId);  // 레이아웃 ID\r\n      formData.append(\"noteContent\", this.note.noteContent);  // 일기 내용\r\n      formData.append(\"noteHashtagList\", noteHashtagList);  // 해시태그 리스트\r\n      for (let i = 0; i < this.note.noteS3MediaList.length; i++) {  // S3 리스트 (버튼 활용 예정)\r\n        formData.append(\"noteS3MediaList[]\", this.note.noteS3MediaList[i]);\r\n      }\r\n      formData.append(\"noteS3MediaList[]\", []); // 로컬 파일 가져오기\r\n      for (let i = 0; i < this.$refs.files.files.length; i++) {\r\n        formData.append(\"noteMediaList[]\", this.$refs.files.files[i]);\r\n      }\r\n      formData.append(\"noteTitle\", this.note.noteTitle);    // 타이틀\r\n      console.log('스티커리스트', this.note.stickerList)\r\n      for(let i = 0; i < this.note.stickerList.length; i++){  // 스티커 리스트\r\n        formData.append('stickerList[' + i + '].leftPixel', this.note.stickerList[i].leftPixel)\r\n        formData.append('stickerList[' + i + '].stickerId', this.note.stickerList[i].stickerId)\r\n        formData.append('stickerList[' + i + '].topPixel', this.note.stickerList[i].topPixel)\r\n      }      \r\n      formData.append('writerId', this.loginUser.userNickname)   // 작성자\r\n\r\n      if(this.$store.getters['getIsUpdate'] == false){  //  일기 작성\r\n        this.$store.dispatch(\"write\", formData).then(() => {\r\n          this.$store.commit('setStickerList', [])\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: '<span style=\"font-size:25px;\">일기 작성 완료.</span>',\r\n            confirmButtonColor: \"#b0da9b\",\r\n            confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n          });\r\n          this.$store.commit(\"initNoteContent\");\r\n          const loginUser = this.$store.getters[\"getLoginUser\"];\r\n          loginUser.userMileage += 10;\r\n          this.$store.commit(\"setLoginUser\", loginUser);\r\n          this.$router.push(\"/main\").catch(() => {});\r\n        });\r\n      } else if (this.$store.getters[\"getIsUpdate\"] == true) {  // 일기 수정\r\n        const note = {\r\n          noteId: this.note.noteId,\r\n          formData: formData,\r\n        };\r\n        this.$store.dispatch(\"modifyNote\", note).then(() => {\r\n          this.$store.commit('setStickerList', [])\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: '<span style=\"font-size:25px;\">일기 수정 완료.</span>',\r\n            confirmButtonColor: \"#b0da9b\",\r\n            confirmButtonText: '<span style=\"font-size:18px;\">확인</span>',\r\n          });\r\n          this.$store.commit(\"initNoteContent\");\r\n          this.$router.push(\"/main\").catch(() => {});\r\n        });\r\n      }\r\n    },\r\n    async dragElement(elmnt) {\r\n          console.log('드래그 실행')\r\n          var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n          if (document.getElementById(elmnt.id)) {\r\n            /* if present, the header is where you move the DIV from:*/\r\n            document.getElementById(elmnt.id).onmousedown = dragMouseDown;\r\n          } else {\r\n            /* otherwise, move the DIV from anywhere inside the DIV:*/\r\n            elmnt.onmousedown = dragMouseDown;\r\n          }\r\n\r\n          function dragMouseDown(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // get the mouse cursor position at startup:\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            document.onmouseup = closeDragElement;\r\n            // call a function whenever the cursor moves:\r\n            document.onmousemove = elementDrag;\r\n          }\r\n\r\n          function elementDrag(e) {\r\n            e = e || window.event;\r\n            e.preventDefault();\r\n            // calculate the new cursor position:\r\n            pos1 = pos3 - e.clientX;\r\n            pos2 = pos4 - e.clientY;\r\n            pos3 = e.clientX;\r\n            pos4 = e.clientY;\r\n            // set the element's new position:\r\n            elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n            elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n          }\r\n\r\n          function closeDragElement() {\r\n            /* stop moving when mouse button is released:*/\r\n            document.onmouseup = null;\r\n            document.onmousemove = null;\r\n          }\r\n        }\r\n  },\r\n  mounted() {\r\n      // 만약 수정하는 상태이면, state에 저장된 노트 컨텐츠들 가져오기\r\n      this.selectDiary = this.currentDiary.diaryTitle\r\n      if(this.$store.getters['getIsUpdate'] == true) {\r\n        const stickerList = this.$store.getters.getStickerList;\r\n        this.note = this.$store.getters['getNoteContent']\r\n        if(this.note.noteHashtagList == '#undefined') this.note.noteHashtagList = ''\r\n        const box = document.getElementById('file-section')\r\n        for(let i = 0; i < this.note.stickerList.length; i++){\r\n          for(let j = 0; j < stickerList.length; j++){\r\n            console.log('실행')\r\n            if(this.note.stickerList[i].stickerId === stickerList[j].sticker.id){\r\n              let img = document.createElement('img')\r\n\r\n              img.id = 'sticker' + this.stickerNum\r\n              this.stickerNum++\r\n              img.src = stickerList[j].sticker.stickerUrl\r\n              img.style.width = '50px'\r\n              img.style.height = '50px'\r\n              img.style.position = 'absolute'\r\n              img.style.top = stickerList[j].topPixel\r\n              img.style.left = stickerList[j].leftPixel\r\n              img.style.cursor = 'pointer'\r\n              img.className = stickerList[j].sticker.id\r\n              box.append(img)\r\n              this.dragElement(img);\r\n              break;\r\n            }\r\n          }          \r\n        }\r\n        const stickerArray = []\r\n        for(let i = 0; i < stickerList.length; i++){\r\n          const stickers = {\r\n            stickerId : stickerList[i].sticker.id,\r\n            topPixel : stickerList[i].topPixel,\r\n            leftPixel : stickerList[i].leftPixel\r\n          }\r\n          stickerArray.push(stickers)\r\n        }\r\n        this.note.stickerList = stickerArray\r\n      }\r\n      this.$store.dispatch(\"diaryGet\").then((res) => {\r\n        const tmp = []\r\n        for(let i=0;i<res.data.length;i++) {\r\n          tmp[i] = res.data[i].diaryTitle\r\n        }\r\n        this.diaryTitleList = tmp\r\n        this.diaryList = res.data\r\n      });\r\n\r\n      EventBus.$on('createSticker', async (sticker) => {\r\n        const box = document.getElementById('file-section')\r\n        // const div = document.createElement('div')\r\n        const img = document.createElement('img')\r\n\r\n        img.id = 'sticker' + this.stickerNum\r\n        this.stickerNum++\r\n\r\n        // div.append(img)\r\n\r\n        img.src = sticker.stickerUrl\r\n\r\n        img.style.width = '50px'\r\n        img.style.height = '50px'\r\n        img.style.position = 'absolute'\r\n        img.style.top = '10px'\r\n        img.style.left = '10px'\r\n        img.style.cursor = 'pointer'\r\n        \r\n        img.className = sticker.id\r\n\r\n        box.append(img)\r\n        await this.dragElement(img);\r\n      })\r\n    this.$store.dispatch(\"diaryGet\").then((res) => {\r\n      const tmp = [];\r\n      for (let i = 0; i < res.data.length; i++) {\r\n        tmp[i] = res.data[i].diaryTitle;\r\n      }\r\n      this.diaryTitleList = tmp;\r\n      this.diaryList = res.data;\r\n    });\r\n  },\r\n  beforeDestroy(){\r\n    EventBus.$off('createSticker');\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#write-wrap {\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding-top: 8%;\r\n  position: relative;\r\n  // background-color: lightblue;\r\n}\r\n#prev-wrap {\r\n  position: absolute;\r\n  top: 0;\r\n  left: auto;\r\n  // background-color: lightpink;\r\n  width: 100%;\r\n}\r\n#WriteContent_Container {\r\n  margin: 0 auto;\r\n  // width: 530px;\r\n  width: 443px;\r\n  // height: 804px;\r\n  height: 610px;\r\n  background-color: #fff;\r\n}\r\n#WriteContent_Templete {\r\n  position:relative;\r\n  // height: 684px;\r\n  height: 610px;\r\n  padding: 14px 36px 30px 36px;\r\n  box-shadow: 3px 3px 11px rgba(166, 166, 168, 0.25);\r\n}\r\n.select-diary-section {\r\n  // background-color: burlywood;\r\n  width: 40%;\r\n  margin: none;\r\n  padding: none;\r\n  div {\r\n    // background-color: red;\r\n    padding: none;\r\n    margin: none;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.v-input__control {\r\n  background-color: red;\r\n  padding: none;\r\n}\r\n.title-section {\r\n  // background-color: lightblue;\r\n  margin: none;\r\n  padding: none;\r\n}\r\n.content-section {\r\n  // background-color: lemonchiffon;\r\n  height: 125px;\r\n  overflow: hidden;\r\n}\r\n.file-up-wrap {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n#file-section {\r\n  background-color: #f7f7f7;\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 5px;\r\n  overflow: hidden;\r\n  position:relative;\r\n}\r\n.file-input {\r\n  // background-color: greenyellow;\r\n  position: absolute;\r\n  width: 5px;\r\n  height: 5px;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n.img-preview {\r\n  // background: #eee;\r\n  display: inline-block;\r\n  width: 371px;\r\n  height:300px;\r\n  object-fit: cover;\r\n\r\n  img {\r\n    height:300px; \r\n    object-fit: cover;    \r\n  }\r\n}\r\n.img-section {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  margin-right: 10px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  img {\r\n    width: 100%;\r\n    // height: 100%;\r\n  }\r\n}\r\n#HashTag_Input {\r\n  margin-top: 20px;\r\n  // background-color: #eee;\r\n}\r\n#WriteContent_Btn {\r\n  height: 38px;\r\n  width: 152px;\r\n  margin: 0 auto;\r\n  margin-top: 90px;\r\n  box-shadow: none;  \r\n}\r\n#Write_Btn {\r\n  background: #ffb319;\r\n  color: white;\r\n  font-size: 17px;\r\n  width: 70px;\r\n  box-shadow: none;\r\n}\r\n#Back_Btn {\r\n  background: #9f9f9f;\r\n  color: white;\r\n  font-size: 17px;\r\n  width: 70px;\r\n  margin-left: 12px;\r\n  box-shadow: none;\r\n}\r\ntextarea {\r\n  letter-spacing: 1px;\r\n}\r\ntextarea {\r\n  padding: 10px;\r\n  max-width: 100%;\r\n  line-height: 1.5;\r\n  border-radius: 5px;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n.sticker{\r\n  // border:3px solid red;\r\n  width:300px;\r\n  height:300px;\r\n}\r\n#targetDialog::-webkit-scrollbar {\r\n  display: none; /* Chrome, Safari, Opera*/\r\n}\r\n</style>"]}]}