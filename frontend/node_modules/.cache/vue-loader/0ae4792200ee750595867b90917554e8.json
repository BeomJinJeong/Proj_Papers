{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\mainList\\Calender.vue?vue&type=style&index=0&id=28a48585&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\src\\components\\mainList\\Calender.vue","mtime":1636967016780},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\project3\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNDYWxlbmRlcl9Db250YWluZXIgew0KICBtYXJnaW46IDAgYXV0bzsNCiAgd2lkdGg6IDk1JTsNCn0NCiNzZWxlY3QtYm94IHsNCiAgZm9udC1zaXplOiAxOHB4Ow0KICB3aWR0aDogNDAwcHg7DQogIGhlaWdodDogNTAwcHg7DQogIC8qIGRpc3BsYXk6ZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7ICovDQp9DQo="},{"version":3,"sources":["Calender.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calender.vue","sourceRoot":"src/components/mainList","sourcesContent":["<template>\r\n  <div id=\"Calender_Container\">\r\n    <v-sheet tile height=\"45\" class=\"d-flex\">\r\n      <!-- 오늘 날짜로 가기 -->\r\n      <v-btn\r\n        outlined\r\n        class=\"mr-4\"\r\n        color=\"grey darken-2\"\r\n        @click=\"setToday\"\r\n      >\r\n        Today\r\n      </v-btn>\r\n      <!-- 뒤로 가기 -->\r\n      <v-btn\r\n        icon\r\n        class=\"ma-2\"\r\n        style=\"position: relative; top: -15px\"\r\n        @click=\"$refs.calendar.prev()\"\r\n        large\r\n      >\r\n        <v-icon>mdi-chevron-left</v-icon>\r\n      </v-btn>\r\n      <v-toolbar-title v-if=\"$refs.calendar\">\r\n        {{ $refs.calendar.title }}\r\n      </v-toolbar-title>\r\n      <!-- 앞으로 가기 -->\r\n      <v-btn\r\n        icon\r\n        class=\"ma-2\"\r\n        style=\"position: relative; top: -15px\"\r\n        @click=\"$refs.calendar.next()\"\r\n        large\r\n      >\r\n        <v-icon>mdi-chevron-right</v-icon>\r\n      </v-btn>\r\n      <v-spacer></v-spacer>\r\n      <!-- 달력 형태 -->\r\n      <v-menu\r\n        bottom\r\n        right\r\n      >\r\n        <template v-slot:activator=\"{ on, attrs }\">\r\n          <v-btn\r\n            outlined\r\n            color=\"grey darken-2\"\r\n            v-bind=\"attrs\"\r\n            v-on=\"on\"\r\n          >\r\n            <span>{{ typeToLabel[type] }}</span>\r\n            <v-icon right>\r\n              mdi-menu-down\r\n            </v-icon>\r\n          </v-btn>\r\n        </template>\r\n        <v-list>\r\n          <v-list-item @click=\"type = 'day'\">\r\n            <v-list-item-title>Day</v-list-item-title>\r\n          </v-list-item>\r\n          <v-list-item @click=\"type = 'month'\">\r\n            <v-list-item-title>Month</v-list-item-title>\r\n          </v-list-item>\r\n        </v-list>\r\n      </v-menu>\r\n    </v-sheet>\r\n    <!-- 달력 -->\r\n    <v-sheet height=\"600\">\r\n      <v-calendar\r\n        ref=\"calendar\"\r\n        v-model=\"focus\"\r\n        :events=\"events\"\r\n        :type=\"type\"\r\n        :event-overlap-threshold=\"30\"\r\n        :event-color=\"getEventColor\"\r\n        @change=\"getEvents\"\r\n        @click:event=\"showEvent\"\r\n        @click:date=\"viewDay\"\r\n        @click:more=\"viewDay\"\r\n      ></v-calendar>\r\n      <!-- @change=\"getEvents\" -->\r\n      <v-menu\r\n        v-model=\"selectedOpen\"\r\n        :close-on-content-click=\"false\"\r\n        :activator=\"selectedElement\"\r\n        offset-x\r\n      >\r\n        <v-card\r\n          color=\"grey lighten-4\"\r\n          min-width=\"350px\"\r\n          flat\r\n        >\r\n          <v-toolbar\r\n            :color=\"selectedEvent.color\"\r\n            dark\r\n          >\r\n            <v-toolbar-title v-html=\"selectedEvent.name\"></v-toolbar-title>\r\n            <v-spacer></v-spacer>\r\n          </v-toolbar>\r\n          <v-card-text id=\"select-box\"> \r\n            <div style=\"height:350px;\">\r\n              <v-img style=\"height:100%;\" :src=\"selectedEvent.noteMedia\" alt=\"일기 사진\"/>\r\n            </div>\r\n            <div style=\"padding-top:10px\">\r\n              <span>{{selectedEvent.content}}</span>\r\n            </div>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-btn\r\n              text\r\n              color=\"secondary\"\r\n              @click=\"selectedOpen = false\"\r\n            >\r\n              닫기\r\n            </v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-menu>\r\n    </v-sheet>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      focus: '',\r\n      type: 'month',\r\n      typeToLabel: {\r\n        month: 'Month',\r\n        day: 'Day',\r\n      },\r\n      month: dayjs().format(\"MM\"),\r\n      // value: \"\",\r\n      events: [],\r\n      colors: [\r\n        \"rgb(177, 177, 233)\",\r\n        \"rgb(200, 178, 216)\",\r\n        \"rgb(156, 218, 218)\",\r\n        \"rgb(157, 230, 157)\",\r\n        \"rgb(236, 205, 148)\",\r\n        \"rgb(253, 187, 251)\",\r\n        \"rgb(255, 149, 149)\",\r\n        \"rgb(244, 247, 111)\",\r\n      ],\r\n      selectedEvent: {},\r\n      selectedElement: null,\r\n      selectedOpen: false,\r\n    };\r\n  },\r\n  methods: {\r\n    getEvents() {\r\n      this.$store.dispatch(\"calenderGet\", this.month).then((res) => {\r\n        const events = []\r\n        console.log(res.data)\r\n        for(let i = 0; i < res.data.length; i++) {\r\n          // const allDay = this.rnd(0, 3) === 0;\r\n\r\n          const event = {\r\n            name: res.data[i].noteTitle,\r\n            id: res.data[i].noteId,\r\n            content: res.data[i].noteContent,\r\n            start: res.data[i].noteCreatedDate,\r\n            end: res.data[i].noteCreatedDate,\r\n            noteMedia: res.data[i].noteMediaList[0],\r\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\r\n            timed: true,\r\n            // time: res.data[i].noteCreatedTime\r\n          }\r\n          events[i] = event\r\n        }\r\n        this.events = events;\r\n      });\r\n\r\n      // const events = [];\r\n\r\n      // const min = new Date(`${start.date}T00:00:00`);\r\n      // const max = new Date(`${end.date}T23:59:59`);\r\n      // const days = (max.getTime() - min.getTime()) / 86400000;\r\n      // const eventCount = this.rnd(days, days + 20);\r\n\r\n      // for (let i = 0; i < eventCount; i++) {\r\n      //   const allDay = this.rnd(0, 3) === 0;\r\n      //   const firstTimestamp = this.rnd(min.getTime(), max.getTime());\r\n      //   const first = new Date(firstTimestamp - (firstTimestamp % 900000));\r\n      //   const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\r\n      //   const second = new Date(first.getTime() + secondTimestamp);\r\n\r\n      //   events.push({\r\n      //     name: this.names[this.rnd(0, this.names.length - 1)],\r\n      //     start: first,\r\n      //     end: second,\r\n      //     color: this.colors[this.rnd(0, this.colors.length - 1)],\r\n      //     timed: !allDay,\r\n      //   });\r\n      // }\r\n\r\n      // this.events = events;\r\n    },\r\n    getEventColor(event) {\r\n      return event.color;\r\n    },\r\n    rnd(a, b) {\r\n      return Math.floor((b - a + 1) * Math.random()) + a;\r\n    },\r\n    prev() {\r\n      this.month = this.month - 1;\r\n    },\r\n    next() {\r\n      this.month = this.month + 1;\r\n    },\r\n    showEvent ({ nativeEvent, event }) {\r\n      const open = () => {\r\n        this.selectedEvent = event\r\n        this.selectedElement = nativeEvent.target\r\n        requestAnimationFrame(() => requestAnimationFrame(() => this.selectedOpen = true))\r\n      }\r\n\r\n      if (this.selectedOpen) {\r\n        this.selectedOpen = false\r\n        requestAnimationFrame(() => requestAnimationFrame(() => open()))\r\n      } else {\r\n        open()\r\n      }\r\n\r\n      nativeEvent.stopPropagation()\r\n    },\r\n    // 일별로 보기\r\n    viewDay ({ date }) {\r\n      this.focus = date\r\n      this.type = 'day'\r\n    },\r\n    // 오늘 날짜로 이동\r\n    setToday () {\r\n      this.focus = ''\r\n    },\r\n  },\r\n  created() {\r\n    // this.$store.dispatch(\"calenderGet\", this.month).then((res) => {\r\n    //   // this.calenderList = res.data.reverse()\r\n    //   const events = []\r\n    //   for(let i = 0; i < res.data.length; i++) {\r\n    //     const allDay = this.rnd(0, 3) === 0;\r\n    //     const event = {\r\n    //       name : res.data[i].noteTitle,\r\n    //       // id : res.data[i].noteId,\r\n    //       color: this.colors[this.rnd(0, this.colors.length - 1)],\r\n    //       timed: !allDay,\r\n    //     }\r\n    //     events[i] = event\r\n    //   }\r\n    //   this.events = events;\r\n    // });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#Calender_Container {\r\n  margin: 0 auto;\r\n  width: 95%;\r\n}\r\n#select-box {\r\n  font-size: 18px;\r\n  width: 400px;\r\n  height: 500px;\r\n  /* display:flex;\r\n  justify-content: center;\r\n  align-items: center; */\r\n}\r\n</style>"]}]}